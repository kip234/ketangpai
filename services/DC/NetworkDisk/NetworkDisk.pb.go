// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.4.0
// source: NetworkDisk.proto

package NetworkDisk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Fileid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Fileid) Reset() {
	*x = Fileid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NetworkDisk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fileid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fileid) ProtoMessage() {}

func (x *Fileid) ProtoReflect() protoreflect.Message {
	mi := &file_NetworkDisk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fileid.ProtoReflect.Descriptor instead.
func (*Fileid) Descriptor() ([]byte, []int) {
	return file_NetworkDisk_proto_rawDescGZIP(), []int{0}
}

func (x *Fileid) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Classid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Classid) Reset() {
	*x = Classid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NetworkDisk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Classid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Classid) ProtoMessage() {}

func (x *Classid) ProtoReflect() protoreflect.Message {
	mi := &file_NetworkDisk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Classid.ProtoReflect.Descriptor instead.
func (*Classid) Descriptor() ([]byte, []int) {
	return file_NetworkDisk_proto_rawDescGZIP(), []int{1}
}

func (x *Classid) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Contents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	Id   []int32  `protobuf:"varint,2,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *Contents) Reset() {
	*x = Contents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NetworkDisk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contents) ProtoMessage() {}

func (x *Contents) ProtoReflect() protoreflect.Message {
	mi := &file_NetworkDisk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contents.ProtoReflect.Descriptor instead.
func (*Contents) Descriptor() ([]byte, []int) {
	return file_NetworkDisk_proto_rawDescGZIP(), []int{2}
}

func (x *Contents) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Contents) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type Filestream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Filestream) Reset() {
	*x = Filestream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NetworkDisk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filestream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filestream) ProtoMessage() {}

func (x *Filestream) ProtoReflect() protoreflect.Message {
	mi := &file_NetworkDisk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filestream.ProtoReflect.Descriptor instead.
func (*Filestream) Descriptor() ([]byte, []int) {
	return file_NetworkDisk_proto_rawDescGZIP(), []int{3}
}

func (x *Filestream) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Fileinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uploader int32  `protobuf:"varint,2,opt,name=uploader,proto3" json:"uploader,omitempty"`
	Classid  int32  `protobuf:"varint,3,opt,name=classid,proto3" json:"classid,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Time     int64  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Fileinfo) Reset() {
	*x = Fileinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NetworkDisk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fileinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fileinfo) ProtoMessage() {}

func (x *Fileinfo) ProtoReflect() protoreflect.Message {
	mi := &file_NetworkDisk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fileinfo.ProtoReflect.Descriptor instead.
func (*Fileinfo) Descriptor() ([]byte, []int) {
	return file_NetworkDisk_proto_rawDescGZIP(), []int{4}
}

func (x *Fileinfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Fileinfo) GetUploader() int32 {
	if x != nil {
		return x.Uploader
	}
	return 0
}

func (x *Fileinfo) GetClassid() int32 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *Fileinfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fileinfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Fileinfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_NetworkDisk_proto protoreflect.FileDescriptor

var file_NetworkDisk_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b,
	0x22, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x8c, 0x01,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xc2, 0x01, 0x0a,
	0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x08,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x1a, 0x17, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x17, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x15, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x6e,
	0x66, 0x6f, 0x28, 0x01, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69,
	0x73, 0x6b, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x1a, 0x15, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69,
	0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_NetworkDisk_proto_rawDescOnce sync.Once
	file_NetworkDisk_proto_rawDescData = file_NetworkDisk_proto_rawDesc
)

func file_NetworkDisk_proto_rawDescGZIP() []byte {
	file_NetworkDisk_proto_rawDescOnce.Do(func() {
		file_NetworkDisk_proto_rawDescData = protoimpl.X.CompressGZIP(file_NetworkDisk_proto_rawDescData)
	})
	return file_NetworkDisk_proto_rawDescData
}

var file_NetworkDisk_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_NetworkDisk_proto_goTypes = []interface{}{
	(*Fileid)(nil),     // 0: NetworkDisk.fileid
	(*Classid)(nil),    // 1: NetworkDisk.classid
	(*Contents)(nil),   // 2: NetworkDisk.contents
	(*Filestream)(nil), // 3: NetworkDisk.filestream
	(*Fileinfo)(nil),   // 4: NetworkDisk.fileinfo
}
var file_NetworkDisk_proto_depIdxs = []int32{
	0, // 0: NetworkDisk.NetworkDisk.download:input_type -> NetworkDisk.fileid
	3, // 1: NetworkDisk.NetworkDisk.upload:input_type -> NetworkDisk.filestream
	1, // 2: NetworkDisk.NetworkDisk.get_contents:input_type -> NetworkDisk.classid
	3, // 3: NetworkDisk.NetworkDisk.download:output_type -> NetworkDisk.filestream
	4, // 4: NetworkDisk.NetworkDisk.upload:output_type -> NetworkDisk.fileinfo
	2, // 5: NetworkDisk.NetworkDisk.get_contents:output_type -> NetworkDisk.contents
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_NetworkDisk_proto_init() }
func file_NetworkDisk_proto_init() {
	if File_NetworkDisk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_NetworkDisk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fileid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NetworkDisk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Classid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NetworkDisk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NetworkDisk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filestream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NetworkDisk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fileinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_NetworkDisk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_NetworkDisk_proto_goTypes,
		DependencyIndexes: file_NetworkDisk_proto_depIdxs,
		MessageInfos:      file_NetworkDisk_proto_msgTypes,
	}.Build()
	File_NetworkDisk_proto = out.File
	file_NetworkDisk_proto_rawDesc = nil
	file_NetworkDisk_proto_goTypes = nil
	file_NetworkDisk_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.4.0
// source: UserCenter.proto

package UserCenter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{0}
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I int32 `protobuf:"varint,1,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetI() int32 {
	if x != nil {
		return x.I
	}
	return 0
}

type S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S string `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *S) Reset() {
	*x = S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S) ProtoMessage() {}

func (x *S) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S.ProtoReflect.Descriptor instead.
func (*S) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{2}
}

func (x *S) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

type Right struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Right bool `protobuf:"varint,1,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *Right) Reset() {
	*x = Right{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Right) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Right) ProtoMessage() {}

func (x *Right) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Right.ProtoReflect.Descriptor instead.
func (*Right) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{3}
}

func (x *Right) GetRight() bool {
	if x != nil {
		return x.Right
	}
	return false
}

type Uuser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pwd     string `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Type    uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Classid int32  `protobuf:"varint,5,opt,name=classid,proto3" json:"classid,omitempty"`
	Email   string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Uuser) Reset() {
	*x = Uuser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uuser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uuser) ProtoMessage() {}

func (x *Uuser) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uuser.ProtoReflect.Descriptor instead.
func (*Uuser) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{4}
}

func (x *Uuser) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Uuser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Uuser) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *Uuser) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Uuser) GetClassid() int32 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *Uuser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classid  int32   `protobuf:"varint,1,opt,name=classid,proto3" json:"classid,omitempty"`
	Teacher  int32   `protobuf:"varint,2,opt,name=teacher,proto3" json:"teacher,omitempty"`
	Name     string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Students []int32 `protobuf:"varint,4,rep,packed,name=students,proto3" json:"students,omitempty"`
}

func (x *Class) Reset() {
	*x = Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserCenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Class) ProtoMessage() {}

func (x *Class) ProtoReflect() protoreflect.Message {
	mi := &file_UserCenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Class.ProtoReflect.Descriptor instead.
func (*Class) Descriptor() ([]byte, []int) {
	return file_UserCenter_proto_rawDescGZIP(), []int{5}
}

func (x *Class) GetClassid() int32 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *Class) GetTeacher() int32 {
	if x != nil {
		return x.Teacher
	}
	return 0
}

func (x *Class) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Class) GetStudents() []int32 {
	if x != nil {
		return x.Students
	}
	return nil
}

var File_UserCenter_proto protoreflect.FileDescriptor

var file_UserCenter_proto_rawDesc = []byte{
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x07,
	0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a,
	0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x69, 0x22, 0x11, 0x0a, 0x01, 0x73,
	0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x22, 0x1d,
	0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x83, 0x01,
	0x0a, 0x05, 0x75, 0x75, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x6b, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0xae, 0x07, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x73, 0x65, 0x72,
	0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x75, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x16, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x73, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x75, 0x75, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x77, 0x64, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0d, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e,
	0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x0d,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69,
	0x64, 0x1a, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x69, 0x64, 0x1a, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x73, 0x5f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x14, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x75, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x11, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0x11,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x11, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a,
	0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x73, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x15, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x1a, 0x11, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_UserCenter_proto_rawDescOnce sync.Once
	file_UserCenter_proto_rawDescData = file_UserCenter_proto_rawDesc
)

func file_UserCenter_proto_rawDescGZIP() []byte {
	file_UserCenter_proto_rawDescOnce.Do(func() {
		file_UserCenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_UserCenter_proto_rawDescData)
	})
	return file_UserCenter_proto_rawDescData
}

var file_UserCenter_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_UserCenter_proto_goTypes = []interface{}{
	(*Empty)(nil), // 0: UserCenter.empty
	(*Id)(nil),    // 1: UserCenter.id
	(*S)(nil),     // 2: UserCenter.s
	(*Right)(nil), // 3: UserCenter.right
	(*Uuser)(nil), // 4: UserCenter.uuser
	(*Class)(nil), // 5: UserCenter.class
}
var file_UserCenter_proto_depIdxs = []int32{
	4,  // 0: UserCenter.UserCenter.creat_user:input_type -> UserCenter.uuser
	1,  // 1: UserCenter.UserCenter.get_user_info:input_type -> UserCenter.id
	2,  // 2: UserCenter.UserCenter.get_user_info_by_email:input_type -> UserCenter.s
	1,  // 3: UserCenter.UserCenter.get_user_pwd:input_type -> UserCenter.id
	1,  // 4: UserCenter.UserCenter.get_user_name:input_type -> UserCenter.id
	1,  // 5: UserCenter.UserCenter.get_user_email:input_type -> UserCenter.id
	1,  // 6: UserCenter.UserCenter.get_user_class:input_type -> UserCenter.id
	1,  // 7: UserCenter.UserCenter.get_user_type:input_type -> UserCenter.id
	2,  // 8: UserCenter.UserCenter.user_is_Exist:input_type -> UserCenter.s
	4,  // 9: UserCenter.UserCenter.refreshing_user_data:input_type -> UserCenter.uuser
	5,  // 10: UserCenter.UserCenter.create_class:input_type -> UserCenter.class
	1,  // 11: UserCenter.UserCenter.get_class_info:input_type -> UserCenter.id
	1,  // 12: UserCenter.UserCenter.get_class_teacher:input_type -> UserCenter.id
	1,  // 13: UserCenter.UserCenter.get_class_name:input_type -> UserCenter.id
	1,  // 14: UserCenter.UserCenter.dissolve_class:input_type -> UserCenter.id
	5,  // 15: UserCenter.UserCenter.refreshing_class_data:input_type -> UserCenter.class
	1,  // 16: UserCenter.UserCenter.fire_student:input_type -> UserCenter.id
	4,  // 17: UserCenter.UserCenter.creat_user:output_type -> UserCenter.uuser
	4,  // 18: UserCenter.UserCenter.get_user_info:output_type -> UserCenter.uuser
	4,  // 19: UserCenter.UserCenter.get_user_info_by_email:output_type -> UserCenter.uuser
	2,  // 20: UserCenter.UserCenter.get_user_pwd:output_type -> UserCenter.s
	2,  // 21: UserCenter.UserCenter.get_user_name:output_type -> UserCenter.s
	2,  // 22: UserCenter.UserCenter.get_user_email:output_type -> UserCenter.s
	1,  // 23: UserCenter.UserCenter.get_user_class:output_type -> UserCenter.id
	1,  // 24: UserCenter.UserCenter.get_user_type:output_type -> UserCenter.id
	3,  // 25: UserCenter.UserCenter.user_is_Exist:output_type -> UserCenter.right
	4,  // 26: UserCenter.UserCenter.refreshing_user_data:output_type -> UserCenter.uuser
	5,  // 27: UserCenter.UserCenter.create_class:output_type -> UserCenter.class
	5,  // 28: UserCenter.UserCenter.get_class_info:output_type -> UserCenter.class
	1,  // 29: UserCenter.UserCenter.get_class_teacher:output_type -> UserCenter.id
	2,  // 30: UserCenter.UserCenter.get_class_name:output_type -> UserCenter.s
	0,  // 31: UserCenter.UserCenter.dissolve_class:output_type -> UserCenter.empty
	5,  // 32: UserCenter.UserCenter.refreshing_class_data:output_type -> UserCenter.class
	5,  // 33: UserCenter.UserCenter.fire_student:output_type -> UserCenter.class
	17, // [17:34] is the sub-list for method output_type
	0,  // [0:17] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_UserCenter_proto_init() }
func file_UserCenter_proto_init() {
	if File_UserCenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_UserCenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserCenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserCenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserCenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Right); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserCenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uuser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserCenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UserCenter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_UserCenter_proto_goTypes,
		DependencyIndexes: file_UserCenter_proto_depIdxs,
		MessageInfos:      file_UserCenter_proto_msgTypes,
	}.Build()
	File_UserCenter_proto = out.File
	file_UserCenter_proto_rawDesc = nil
	file_UserCenter_proto_goTypes = nil
	file_UserCenter_proto_depIdxs = nil
}
